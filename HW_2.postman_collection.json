{
	"info": {
		"_postman_id": "ffeb7fc4-68b9-4226-bf26-0d2cea6b7a96",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18924512"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Отправить запрос.\r",
							"// Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос.\r",
							"// 2.Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3.Спарсить response body в json.\r",
							"    var resp = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Kate\");\r",
							"});\r",
							"\r",
							"// 5.Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"age\", function () {\r",
							"pm.expect(resp.age).to.eql(\"26\");\r",
							"});\r",
							"\r",
							"// 6.Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"salary\", function () {\r",
							"pm.expect(resp.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"// 7.Спарсить request.\r",
							"var req = request.data\r",
							"\r",
							"// 8.Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Checking name\", function () {\r",
							"    pm.expect(req.name).to.eql(resp.name);\r",
							"});\r",
							"\r",
							"// 9.Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Checking age\", function () {\r",
							"    pm.expect(req.age).to.eql(resp.age);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Checking salary\", function () {\r",
							"    pm.expect(Number (req.salary)).to.eql(resp.salary);\r",
							"});\r",
							"\r",
							"//11.Вывести в консоль параметр family из response\r",
							"console.log (resp.family)\r",
							"\r",
							"//12.Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"U_salary_1_5 year in the response is equal salary *4 from the request\", function () {\r",
							"    pm.expect(resp.family. u_salary_1_5_year).to.eql(req.salary * 4);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "age",
							"value": "26",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1.Отправить запрос\r",
							"\r",
							"// 2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3.Спарсить response body в json\r",
							"var resp = pm.response.json();\r",
							"\r",
							"// 4.Спарсить request\r",
							"var requestJSON = request.data;\r",
							"\r",
							"// 5.Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"The response name is equal to the request name\", function() {\r",
							"    pm.expect(resp.name).to.eql(\"Marina\");\r",
							"});\r",
							"\r",
							"// 6.Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"The response age is equal to the request age\", function() {\r",
							"    pm.expect(resp.age).to.eql(25);\r",
							"});\r",
							"\r",
							"// 7.Вывести в консоль параметр salary из request.\r",
							"console.log (request.salary)\r",
							"\r",
							"// 8.Вывести в консоль параметр salary из response.\r",
							"console.log (resp.salary)\r",
							"\r",
							"// 9.Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(resp.salary[0])\r",
							"\r",
							"// 10.Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(resp.salary[1])\r",
							"\r",
							"// 11.Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
							"console.log(resp.salary[2])\r",
							"\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"the salary[0] parameter is equal the salary from the request\", function () {\r",
							"    pm.expect(resp.salary[0]).to.eql(Number(req.salary));\r",
							"});\r",
							"\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"the salary[1] parameter is equal the salary from the request\", function () {\r",
							"    pm.expect(Number(resp.salary[1])).to.eql(req.salary * 2);\r",
							"});\r",
							"\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"the salary[2] parameter is equal the salary from the request\", function () {\r",
							"    pm.expect(Number(resp.salary[2])).to.eql(req.salary * 3);\r",
							"});\r",
							"\r",
							"// 15.Передать в окружение переменную name\r",
							"pm.environment.set(\"name\", \"Kate\");\r",
							"\r",
							"// 16. Передать в окружение переменную age\r",
							"pm.environment.set(\"Age\", \"25\");\r",
							"\r",
							"// 17. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\", \"1000\");\r",
							"\r",
							"// 18. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
							"for (var prop in resp.salary )\r",
							"{\r",
							"    console.log (\"salary\" + prop + \"- \" + resp.salary [prop]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Marina&age=25&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Marina"
						},
						{
							"key": "age",
							"value": "25"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Вставить параметр salary из окружения в request\r",
							"// Вставить параметр age из окружения в age\r",
							"// Вставить параметр name из окружения в name\r",
							"// Отправить запрос.\r",
							"\r",
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Спарсить response body в json.\r",
							"var responseJSON = pm.response.json();\r",
							"\r",
							"//Спарсить request.\r",
							"var requestJSON = pm.request.url.query.toObject()\r",
							"\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"response have param = start_qa_salary\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"response have param = qa_salary_after_6_months\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"response have param = qa_salary_after_12_months\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"response have param = qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"response have param = qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(responseJSON).to.have.property (\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"//Проверить, что json response имеет параметр person\r",
							"pm.test(\"Json have param person\", function () {\r",
							"    pm.expect(responseJSON).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"//Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"start_qa_salary = salary_request\", function () {\r",
							"    pm.expect(String(responseJSON.start_qa_salary)).to.eql(request.data.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_6_months = salary * 2\", function () {\r",
							"pm.expect(responseJSON.qa_salary_after_6_months).to.eql(request.data.salary*2);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_12_months = salary*2.7\", function () {\r",
							"    pm.expect(responseJSON.qa_salary_after_12_months).to.eql(request.data.salary*2.7);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_1.5_year = salary*3.3\", function () {\r",
							"    pm.expect(responseJSON[\"qa_salary_after_1.5_year\"]).to.eql(request.data.salary*3.3);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"qa_salary_after_3.5_years = salary*3.8\", function () {\r",
							"    pm.expect(responseJSON[\"qa_salary_after_3.5_years\"]).to.eql(request.data.salary*3.8);\r",
							"});\r",
							"\r",
							"// Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"correct param u_name\", function () {\r",
							"    pm.expect(responseJSON.person.u_name[1]).to.eql(+request.data.salary);\r",
							"});\r",
							"\r",
							"//Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"correct param u_age\", function () {\r",
							"    pm.expect(responseJSON.person.u_age).to.eql(+request.data.age);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"u_salary_5_years = salary*4.2  \", function () {\r",
							"    pm.expect(responseJSON.person.u_salary_5_years).to.eql(+request.data.salary*4.2);\r",
							"});\r",
							"\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"for (var prop in responseJSON.person )\r",
							"{\r",
							"    console.log (\"person \" + prop + \"- \" + responseJSON.person [prop]);\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}